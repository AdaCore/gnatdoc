variables:
   # The common part of the URL for cloning from within a CI
   GIT_CLONE_BASE: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}

stages:
  - build_and_test
  - downstream_ci

#########
# BUILD #
#########

.basic-setup:
    # Temporary: clone the specific branch of ci-fragments
    # TODO: remove the next 4 lines when this version of ci-fragments is available in the image
    - cd /tmp
    - git clone $GIT_CLONE_BASE/eng/it/ci-fragments -b topic/generic_ci_phase_2 --depth 1
    - export PATH=/tmp/ci-fragments:$PATH
    - cd -
    # Use generic_anod_ci here.
    - generic_anod_ci
    - cat /tmp/ci_env.sh
    - . /tmp/ci_env.sh

build_and_test:
  services:
     - image:e3
     - cpu:8
     - mem:16
  stage: build_and_test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'pipeline'
    - if: $CI_COMMIT_BRANCH == 'master' && $CI_COMMIT_TITLE =~ /Merge branch.*/
    - if: $CI_COMMIT_BRANCH == 'edge' && $CI_COMMIT_TITLE =~ /Merge branch.*/
  script:
    - !reference [.basic-setup]

    # Build gnatdoc
    - anod build gnatdoc4 $ACI_TRACK_QUALIFIER

    # Test gnatdoc
    - anod test gnatdoc4 $ACI_TRACK_QUALIFIER

    # Process the report
    - BUILD_SPACE_NAME=`anod eval gnatdoc4 build_space_name --primitive test $ACI_TRACK_QUALIFIER | tr -d "'"`
    - SB_BASE=$ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/$BUILD_SPACE_NAME
    - e3-testsuite-report
       --failure-exit-code 1
       --xunit-output $CI_PROJECT_DIR/xunit_output.xml
       $SB_BASE//results/new/ || FAILED=true

    - if [ ! -z ${FAILED+x} ]; then echo "There was at least one testcase failure" && exit 1; fi

  artifacts:
    when: always
    reports:
      junit: xunit_output.xml

downstream_ci:
  stage: downstream_ci
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
  inherit:
    variables: false
  variables:
    ACI_UPSTREAM_PROJECT_ID: $CI_PROJECT_ID
    ACI_UPSTREAM_MERGE_REQUEST_IID: $CI_MERGE_REQUEST_IID
  parallel:
    matrix:
      - PROJECT: ["eng/ide/ada_language_server"]
  trigger:
    strategy: depend
    project: $PROJECT
